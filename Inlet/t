void Test()
{

  const char *name = "/shm-example";	// file name
  const int SIZE = 4096;		// file size

  int shm_fd;		// file descriptor, from shm_open()
  char *shm_base;	// base address, from mmap()

  /* open the shared memory segment as if it was a file */
  shm_fd = shm_open(name, O_RDONLY, 0666);
  if (shm_fd == -1) {
    printf("cons: Shared memory failed\n");
    exit(1);
  }

  /* map the shared memory segment to the address space of the process */
  shm_base = mmap(0, SIZE, PROT_READ, MAP_SHARED, shm_fd, 0);
  if (shm_base == MAP_FAILED) {
    printf("cons: Map failed\n");
    // close and unlink?
    exit(1);
  }

    memset( shm_base, 0, SIZE );
    while(shm_base[0] == 0)
    {
        printf("Waiting for sync.\n");
        sleep(1);
    }

  /* read from the mapped shared memory segment */
  printf("%s", shm_base);

    exit(0);

}

